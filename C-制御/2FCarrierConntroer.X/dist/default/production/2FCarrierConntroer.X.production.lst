

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Wed Jan 24 15:11:25 2018

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	12F683
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.40
    13                           ; Generated 01/12/2016 GMT
    14                           ; 
    15                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC12F683 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0013                     	;# 
    62  0013                     	;# 
    63  0014                     	;# 
    64  0015                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001E                     	;# 
    69  001F                     	;# 
    70  0081                     	;# 
    71  0085                     	;# 
    72  008C                     	;# 
    73  008E                     	;# 
    74  008F                     	;# 
    75  0090                     	;# 
    76  0092                     	;# 
    77  0095                     	;# 
    78  0095                     	;# 
    79  0096                     	;# 
    80  0096                     	;# 
    81  0099                     	;# 
    82  009A                     	;# 
    83  009A                     	;# 
    84  009B                     	;# 
    85  009C                     	;# 
    86  009D                     	;# 
    87  009E                     	;# 
    88  009F                     	;# 
    89  0005                     _GPIO	set	5
    90  0005                     _GPIObits	set	5
    91  000B                     _INTCONbits	set	11
    92  0001                     _TMR0	set	1
    93  009F                     _ANSEL	set	159
    94  0081                     _OPTION_REG	set	129
    95  008F                     _OSCCON	set	143
    96  0085                     _TRISIO	set	133
    97                           
    98                           ; #config settings
    99  0000                     
   100                           	psect	cinit
   101  0010                     start_initialization:	
   102  0010                     __initialization:	
   103                           
   104                           ; Clear objects allocated to COMMON
   105  0010  01F4               	clrf	__pbssCOMMON& (0+127)
   106  0011  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   107  0012                     end_of_initialization:	
   108                           ;End of C runtime variable initialization code
   109                           
   110  0012                     __end_of__initialization:	
   111  0012  0183               	clrf	3
   112  0013  2814               	ljmp	_main	;jump to C main() function
   113                           
   114                           	psect	bssCOMMON
   115  0074                     __pbssCOMMON:	
   116  0074                     _flag:	
   117  0074                     	ds	2
   118                           
   119                           	psect	cstackCOMMON
   120  0070                     __pcstackCOMMON:	
   121  0070                     ?_ISR:	
   122  0070                     ??_ISR:	
   123                           ; 1 bytes @ 0x0
   124                           
   125  0070                     ?_main:	
   126                           ; 1 bytes @ 0x0
   127                           
   128                           
   129                           ; 1 bytes @ 0x0
   130  0070                     	ds	4
   131  0074                     ??_main:	
   132                           
   133                           	psect	maintext
   134  0014                     __pmaintext:	
   135                           ; 1 bytes @ 0x4
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 32 in file "main.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;		None
   146 ;; Return value:  Size  Location     Type
   147 ;;                  1    wreg      void 
   148 ;; Registers used:
   149 ;;		wreg, status,2, status,0
   150 ;; Tracked objects:
   151 ;;		On entry : B00/0
   152 ;;		On exit  : 0/0
   153 ;;		Unchanged: 0/0
   154 ;; Data sizes:     COMMON   BANK0   BANK1
   155 ;;      Params:         0       0       0
   156 ;;      Locals:         0       0       0
   157 ;;      Temps:          0       0       0
   158 ;;      Totals:         0       0       0
   159 ;;Total ram usage:        0 bytes
   160 ;; Hardware stack levels required when called:    1
   161 ;; This function calls:
   162 ;;		Nothing
   163 ;; This function is called by:
   164 ;;		Startup code after reset
   165 ;; This function uses a non-reentrant model
   166 ;;
   167                           
   168                           
   169                           ;psect for function _main
   170  0014                     _main:	
   171                           
   172                           ;main.c: 34: OSCCON = 0b00000001;
   173                           
   174                           ;incstack = 0
   175                           ; Regs used in _main: [wreg+status,2+status,0]
   176  0014  3001               	movlw	1
   177  0015  1683               	bsf	3,5	;RP0=1, select bank1
   178  0016  008F               	movwf	15	;volatile
   179                           
   180                           ;main.c: 35: TRISIO = 0b00100000;
   181  0017  3020               	movlw	32
   182  0018  0085               	movwf	5	;volatile
   183                           
   184                           ;main.c: 36: GPIO = 0x00;
   185  0019  1283               	bcf	3,5	;RP0=0, select bank0
   186  001A  0185               	clrf	5	;volatile
   187                           
   188                           ;main.c: 37: OPTION_REG = 0b00000101;
   189  001B  3005               	movlw	5
   190  001C  1683               	bsf	3,5	;RP0=1, select bank1
   191  001D  0081               	movwf	1	;volatile
   192                           
   193                           ;main.c: 38: ANSEL = 0b00000000;
   194  001E  019F               	clrf	31	;volatile
   195  001F                     l496:	
   196                           ;main.c: 40: for(;;){
   197                           
   198                           
   199                           ;main.c: 42: if(GPIObits.GP5 == 0 && flag == 0){
   200  001F  1283               	bcf	3,5	;RP0=0, select bank0
   201  0020  1A85               	btfsc	5,5	;volatile
   202  0021  282F               	goto	l508
   203  0022  0874               	movf	_flag,w
   204  0023  0475               	iorwf	_flag+1,w
   205  0024  1D03               	btfss	3,2
   206  0025  282F               	goto	l508
   207                           
   208                           ;main.c: 44: TMR0 = 22;
   209  0026  3016               	movlw	22
   210  0027  0081               	movwf	1	;volatile
   211                           
   212                           ;main.c: 45: INTCONbits.GIE = 1;
   213  0028  178B               	bsf	11,7	;volatile
   214                           
   215                           ;main.c: 46: INTCONbits.T0IF = 0;
   216  0029  110B               	bcf	11,2	;volatile
   217                           
   218                           ;main.c: 47: INTCONbits.T0IE = 1;
   219  002A  168B               	bsf	11,5	;volatile
   220                           
   221                           ;main.c: 48: flag = 1;
   222  002B  3001               	movlw	1
   223  002C  00F4               	movwf	_flag
   224  002D  3000               	movlw	0
   225  002E  00F5               	movwf	_flag+1
   226  002F                     l508:	
   227                           
   228                           ;main.c: 49: }
   229                           ;main.c: 52: if(GPIObits.GP5 == 1){
   230  002F  1E85               	btfss	5,5	;volatile
   231  0030  281F               	goto	l496
   232                           
   233                           ;main.c: 54: INTCONbits.T0IE = 0;
   234  0031  128B               	bcf	11,5	;volatile
   235                           
   236                           ;main.c: 55: INTCONbits.T0IF = 0;
   237  0032  110B               	bcf	11,2	;volatile
   238                           
   239                           ;main.c: 56: INTCONbits.GIE = 0;
   240  0033  138B               	bcf	11,7	;volatile
   241                           
   242                           ;main.c: 57: GPIObits.GP2 = 0;
   243  0034  1105               	bcf	5,2	;volatile
   244                           
   245                           ;main.c: 58: flag = 0;
   246  0035  01F4               	clrf	_flag
   247  0036  01F5               	clrf	_flag+1
   248                           
   249                           ;main.c: 59: }
   250                           ;main.c: 60: }
   251  0037  281F               	goto	l496
   252  0038                     __end_of_main:	
   253                           
   254                           	psect	text1
   255  0038                     __ptext1:	
   256 ;; *************** function _ISR *****************
   257 ;; Defined at:
   258 ;;		line 20 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		None
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMMON   BANK0   BANK1
   272 ;;      Params:         0       0       0
   273 ;;      Locals:         0       0       0
   274 ;;      Temps:          4       0       0
   275 ;;      Totals:         4       0       0
   276 ;;Total ram usage:        4 bytes
   277 ;; Hardware stack levels used:    1
   278 ;; This function calls:
   279 ;;		Nothing
   280 ;; This function is called by:
   281 ;;		Interrupt level 1
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285                           
   286                           ;psect for function _ISR
   287  0038                     _ISR:	
   288                           
   289                           ;main.c: 22: GPIObits.GP2 = 1;
   290  0038  1505               	bsf	5,2	;volatile
   291                           
   292                           ;main.c: 23: INTCONbits.GIE = 0;
   293  0039  138B               	bcf	11,7	;volatile
   294                           
   295                           ;main.c: 24: INTCONbits.T0IF = 0;
   296  003A  110B               	bcf	11,2	;volatile
   297                           
   298                           ;main.c: 25: INTCONbits.T0IE = 0;
   299  003B  128B               	bcf	11,5	;volatile
   300  003C  0873               	movf	??_ISR+3,w
   301  003D  00FF               	movwf	127
   302  003E  0872               	movf	??_ISR+2,w
   303  003F  008A               	movwf	10
   304  0040  0871               	movf	??_ISR+1,w
   305  0041  0084               	movwf	4
   306  0042  0E70               	swapf	??_ISR^(0+-128),w
   307  0043  0083               	movwf	3
   308  0044  0EFE               	swapf	126,f
   309  0045  0E7E               	swapf	126,w
   310  0046  0009               	retfie
   311  0047                     __end_of_ISR:	
   312  007E                     btemp	set	126	;btemp
   313  007E                     wtemp0	set	126
   314                           
   315                           	psect	intentry
   316  0004                     __pintentry:	
   317                           ;incstack = 0
   318                           ; Regs used in _ISR: []
   319                           
   320  0004                     interrupt_function:	
   321  007E                     saved_w	set	btemp
   322  0004  00FE               	movwf	btemp
   323  0005  0E03               	swapf	3,w
   324  0006  00F0               	movwf	??_ISR
   325  0007  0804               	movf	4,w
   326  0008  00F1               	movwf	??_ISR+1
   327  0009  080A               	movf	10,w
   328  000A  00F2               	movwf	??_ISR+2
   329  000B  1283               	bcf	3,5	;RP0=0, select bank0
   330  000C  087F               	movf	btemp+1,w
   331  000D  00F3               	movwf	??_ISR+3
   332  000E  2838               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BANK1               20      0       0       5        0.0%
ABS                  0      0       6       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0       6       8        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Wed Jan 24 15:11:25 2018

            __CFG_CP$OFF 0000                      l508 002F                      l496 001F  
           __CFG_CPD$OFF 0000                      _ISR 0038                      fsr0 0004  
                   ?_ISR 0070                     _GPIO 0005                     _TMR0 0001  
                   _flag 0074                     _main 0014                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 000F            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000                    ??_ISR 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _ANSEL 009F            __CFG_PWRTE$ON 0000  
         __CFG_FCMEN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0010             __end_of_main 0038  
                 ??_main 0074                   _OSCCON 008F                   _TRISIO 0085  
                 saved_w 007E  __end_of__initialization 0012           __pcstackCOMMON 0070  
             __pmaintext 0014               __pintentry 0004                  __ptext1 0038  
           __size_of_ISR 000F     end_of_initialization 0012      start_initialization 0010  
            __end_of_ISR 0047              __pbssCOMMON 0074                ___latbits 0000  
      interrupt_function 0004                 _GPIObits 0005            __size_of_main 0024  
             _INTCONbits 000B                 intlevel1 0000               _OPTION_REG 0081  
     __CFG_FOSC$INTOSCIO 0000  
